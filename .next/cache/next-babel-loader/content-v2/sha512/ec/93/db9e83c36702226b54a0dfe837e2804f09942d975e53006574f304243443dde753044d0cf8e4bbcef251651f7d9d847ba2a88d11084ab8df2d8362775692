{"ast":null,"code":"import nc from 'next-connect';\nimport cors from 'cors';\nimport notes from '../../../data';\n\nconst getById = id => {\n  const nextId = parseInt(id);\n  return notes.find(it => it.id === nextId);\n};\n\nconst getIndexById = id => {\n  const nextId = parseInt(id);\n  return notes.findIndex(it => it.id === nextId);\n}; // get single note\n// update single note\n// delete single note\n\n\nexport default nc() // use connect based middleware\n.use(cors()) // express like routing for methods\n.get(async (req, res) => {\n  console.log(req.query);\n  res.send({\n    data: getById(req.query.id)\n  });\n}).put(async (req, res) => {\n  res.end('hello');\n}).delete(async (req, res) => {\n  res.end('hello');\n});","map":{"version":3,"sources":["/Users/rubencarreira/Projects/nextjs-intro/src/pages/api/notes/[id].js"],"names":["nc","cors","notes","getById","id","nextId","parseInt","find","it","getIndexById","findIndex","use","get","req","res","console","log","query","send","data","put","end","delete"],"mappings":"AAAA,OAAOA,EAAP,MAAe,cAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AAEA,MAAMC,OAAO,GAAIC,EAAD,IAAQ;AACtB,QAAMC,MAAM,GAAGC,QAAQ,CAACF,EAAD,CAAvB;AACA,SAAOF,KAAK,CAACK,IAAN,CAAYC,EAAD,IAAQA,EAAE,CAACJ,EAAH,KAAUC,MAA7B,CAAP;AACD,CAHD;;AAKA,MAAMI,YAAY,GAAIL,EAAD,IAAQ;AAC3B,QAAMC,MAAM,GAAGC,QAAQ,CAACF,EAAD,CAAvB;AACA,SAAOF,KAAK,CAACQ,SAAN,CAAiBF,EAAD,IAAQA,EAAE,CAACJ,EAAH,KAAUC,MAAlC,CAAP;AACD,CAHD,C,CAKA;AACA;AACA;;;AACA,eAAeL,EAAE,GACf;AADe,CAEdW,GAFY,CAERV,IAAI,EAFI,EAGb;AAHa,CAIZW,GAJY,CAIR,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,KAAhB;AACAH,EAAAA,GAAG,CAACI,IAAJ,CAAS;AAAEC,IAAAA,IAAI,EAAEhB,OAAO,CAACU,GAAG,CAACI,KAAJ,CAAUb,EAAX;AAAf,GAAT;AACD,CAPY,EAQZgB,GARY,CAQR,OAAOP,GAAP,EAAYC,GAAZ,KAAoB;AACvBA,EAAAA,GAAG,CAACO,GAAJ,CAAQ,OAAR;AACD,CAVY,EAWZC,MAXY,CAWL,OAAOT,GAAP,EAAYC,GAAZ,KAAoB;AAC1BA,EAAAA,GAAG,CAACO,GAAJ,CAAQ,OAAR;AACD,CAbY,CAAf","sourcesContent":["import nc from 'next-connect';\nimport cors from 'cors';\nimport notes from '../../../data';\n\nconst getById = (id) => {\n  const nextId = parseInt(id);\n  return notes.find((it) => it.id === nextId);\n};\n\nconst getIndexById = (id) => {\n  const nextId = parseInt(id);\n  return notes.findIndex((it) => it.id === nextId);\n};\n\n// get single note\n// update single note\n// delete single note\nexport default nc()\n  // use connect based middleware\n  .use(cors())\n  // express like routing for methods\n  .get(async (req, res) => {\n    console.log(req.query);\n    res.send({ data: getById(req.query.id) });\n  })\n  .put(async (req, res) => {\n    res.end('hello');\n  })\n  .delete(async (req, res) => {\n    res.end('hello');\n  });\n"]},"metadata":{},"sourceType":"module"}
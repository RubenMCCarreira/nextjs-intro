{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport nc from 'next-connect';\nimport notes from '../../../data';\nconst handler = nc().get((req, res) => {\n  res.send({\n    data: notes\n  });\n}).post((req, res) => {\n  const newNote = _objectSpread(_objectSpread({}, req.body), {}, {\n    id: Date.now()\n  });\n\n  notes.push(newNote);\n  res.json({\n    data: notes\n  });\n}).put(async (req, res) => {\n  res.end('hello');\n});\nexport default handler;","map":{"version":3,"sources":["/Users/rubencarreira/Projects/nextjs-intro/src/pages/api/notes/index.js"],"names":["nc","notes","handler","get","req","res","send","data","post","newNote","body","id","Date","now","push","json","put","end"],"mappings":";;;;;;AAAA,OAAOA,EAAP,MAAe,cAAf;AACA,OAAOC,KAAP,MAAkB,eAAlB;AAEA,MAAMC,OAAO,GAAGF,EAAE,GACfG,GADa,CACT,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjBA,EAAAA,GAAG,CAACC,IAAJ,CAAS;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAT;AACD,CAHa,EAIbO,IAJa,CAIR,CAACJ,GAAD,EAAMC,GAAN,KAAc;AAClB,QAAMI,OAAO,mCACRL,GAAG,CAACM,IADI;AAEXC,IAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAFO,IAAb;;AAIAZ,EAAAA,KAAK,CAACa,IAAN,CAAWL,OAAX;AAEAJ,EAAAA,GAAG,CAACU,IAAJ,CAAS;AAAER,IAAAA,IAAI,EAAEN;AAAR,GAAT;AACD,CAZa,EAabe,GAba,CAaT,OAAOZ,GAAP,EAAYC,GAAZ,KAAoB;AACvBA,EAAAA,GAAG,CAACY,GAAJ,CAAQ,OAAR;AACD,CAfa,CAAhB;AAiBA,eAAef,OAAf","sourcesContent":["import nc from 'next-connect';\nimport notes from '../../../data';\n\nconst handler = nc()\n  .get((req, res) => {\n    res.send({ data: notes });\n  })\n  .post((req, res) => {\n    const newNote = {\n      ...req.body,\n      id: Date.now(),\n    };\n    notes.push(newNote);\n\n    res.json({ data: notes });\n  })\n  .put(async (req, res) => {\n    res.end('hello');\n  });\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}